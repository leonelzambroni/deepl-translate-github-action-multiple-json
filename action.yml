name: 'DeepL Translate Github Action Multiple JSON'
description: 'Translate any document using DeepL Translate API'

inputs:
  target_languages:
    description: "Target languages to translate to"
    required: true
  input_folder_path:
    description: "Folder path containing JSON files to translate"
    required: true
  input_file_names:
    description: "Comma-separated list of file names to translate (use * for all)"
    required: true
  output_file_name_pattern:
    description: "Pattern of the output file name, including the folder name"
    required: true
  deepl_api_key:
    description: "API Key for DeepL API"
    required: true
  ignore_terms:
    description: "Terms to ignore when translating"
    required: false
  no_translate_start_tag:
    description: "Start tag to ignore when translating"
    required: false
    default: <!-- notranslate -->
  no_translate_end_tag:
    description: "End tag to ignore when translating"
    required: false
    default: <!-- /notranslate -->

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up node
      uses: actions/setup-node@v3

    - name: Run translation script
      shell: bash
      env:
        target_languages: ${{ inputs.target_languages }}
        input_folder_path: ${{ inputs.input_folder_path }}
        input_file_names: ${{ inputs.input_file_names }}
        output_file_name_pattern: ${{ inputs.output_file_name_pattern }}
        deepl_api_key: ${{ inputs.deepl_api_key }}
        ignore_terms: ${{ inputs.ignore_terms }}
        no_translate_start_tag: ${{ inputs.no_translate_start_tag }}
        no_translate_end_tag: ${{ inputs.no_translate_end_tag }}
      run: |
        cd ${{github.action_path}} && yarn install && yarn start

    - name: Remove unused temp file if it exists
      shell: bash
      run: |
        if [ -f to_translate.txt ]; then
          rm to_translate.txt
        else
          echo "to_translate.txt does not exist, skipping step"
        fi

    - name: Create Branch, Commit, and Open Pull Request
      run: |
        branch_name="translation-${{ github.sha }}"
        git checkout -b $branch_name
        git add .
        git commit -m "Translation of ${{ inputs.input_file_names }}"
        gh pr create --base develop --head $branch_name --title "Automatic file Translation" --body "This pull request includes translations of files: ${{ inputs.input_file_names }}"
        echo "::set-output name=branch_name::$branch_name"

branding:
  icon: 'activity'
  color: 'blue'
